<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the game Board.

//DECLARE ALL THE VARIABLES!!!
global.destroyCross = false;

numOfRows = 5;
numOfCols = 5;
totalTiles = numOfRows*numOfCols;
numberOfFrogs = 10;
global.frogCounterTotal = 1;

widthOfTile = 64;
countery = widthOfTile;
counterx = 0;



//IF THIS IS A RANDOM LEVEL..... ACTUALLY CREATE THE game board:
var roomname = room_get_name(room);
show_debug_message("ROOM NAME" +string(roomname));


if(roomname == "randomLevel")
{
    
    //create a grid of boards....One randomly chosen as the goal and the other as the frog
    goalChosen = false;
    frog1chosen = false;
    obstacleChosen = false;
    
    
    randomGoalNum = irandom_range(1,numOfRows*numOfCols);
    randomFrogNum = irandom_range(1,numOfRows*numOfCols);
    randomObstNum = irandom_range(1,numOfRows*numOfCols);
    tileCounter = 1;
    
    //Check to make sure not to make the frog on top of the goal.
    if(randomGoalNum == randomFrogNum)
    {
        randomFrogNum++;
        if(randomFrogNum == 17)
        {
            randomFrogNum -= 2;
        }
    }
    //check to see if the obst number is the same as other
    while(randomObstNum == randomFrogNum) or (randomObstNum == randomGoalNum)
    {
    randomObstNum = irandom_range(1,numOfRows*numOfCols);
    }
    
    
    for(i=0;i&lt;numOfRows;i++)
    {   
        counterx += widthOfTile;
        for(j=0;j&lt;numOfCols;j++)
        {
               
                
                //Check to see if the goal has been chosen already...
                if(randomGoalNum == tileCounter)
                {
                    goalChosen = true;
                } 
                //Check to see if the Frog has been chosen already...
                if(randomFrogNum == tileCounter)
                {
                    frog1chosen = true;
                }            
                if(randomObstNum == tileCounter)
                {
                    obstacleChosen = true;
                }            
                
                
            if(goalChosen == false)
            {       
                instance_create(counterx, countery, obj_tile);
            }
            if(goalChosen == true)
            {
               instance_create(counterx, countery, obj_goal);
                instance_create(counterx, countery, obj_tile);
                goalChosen = false;
            }
            if(obstacleChosen == true)
            {
                instance_create(counterx, countery, obj_poisonedGoal);
                instance_create(counterx, countery, obj_tile);
                obstacleChosen = false;
            }
            if(frog1chosen == true)
            {       
               instance_create(counterx, countery, obj_frog);
                frog1chosen = false;
            }
            
            
            
            
            if(global.frogCounterTotal &lt;= numberOfFrogs)&amp;&amp;(irandom(totalTiles) = 1)
            {
                //Check if this frog is in the same square as another frog
                if(!place_meeting(x, y, obj_frog))
                {
                    instance_create(counterx, countery, obj_frog);
                    global.frogCounterTotal ++;
                }
            }
            
            countery += widthOfTile;
            tileCounter++;
            
        }
        countery = widthOfTile;
    }
    
    
    
    
    
        
        
    show_debug_message("---------------global.frogCounterTotal: "+string(global.frogCounterTotal));
    
    
    

}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(ord("R")))
{
    game_restart();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
